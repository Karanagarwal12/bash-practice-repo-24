#!/usr/bin/env bash

# Issue: Implement Password Generation Functions
# Description:
# Create a function that generates passwords, The password should consist of uppercase letters, lowercase letters, numbers, and special characters. The function should take in a single argument, which is the length of the password to generate. The function should return the generated password.

generate_password() {
    local length=$1
    local password=''

    # Define character sets
    local uppercase='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
    local lowercase='abcdefghijklmnopqrstuvwxyz'
    local numbers='0123456789'
    local special_chars='!@#$%^&*()_-+=<>?/{}[]'

    # Combine character sets
    local all_chars="${uppercase}${lowercase}${numbers}${special_chars}"

    # Loop to generate password
    for ((i=0; i<$length; i++)); do
        # Select a random character from all_chars
        local rand_index=$(( RANDOM % ${#all_chars} ))
        local rand_char=${all_chars:$rand_index:1}
        password+="$rand_char"
    done

    echo "$password"
}

# Get password length from user input
read -p "Enter password length: " length

# Generate password
password=$(generate_password "$length")
echo "Generated password: $password"
